{"ast":null,"code":"import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nexport default function ForecastHourly(props) {\n  function Temperature() {\n    let temperature = Math.round(props.hourlydata.temp);\n    return `${temperature}`;\n  }\n  ;\n  console.log(props.hourlydata[0].dt);\n  function hour() {\n    let date = new Date(props.hourlydata.dt * 1000);\n    let hour = date.getHours();\n    console.log(`${hour}`);\n  }\n  return \"loading\";\n}\n/*<div className=\"weather-forecast\">\n    <div className=\"row\">\n      {props.hourlydata.map(function (hourlyforecast, index) {\n        if (index < 5) {\n          return (\n            <div className=\"col\" key={index}>\n              <div className=\"forecastHourly\">\n                <div className=\"weatherforecast-hour\">\"hour\"</div>\n                <WeatherIcon\n                  code={props.hourlydata.weather[0].icon}\n                  size={20}\n                />{\" \"}\n                <div className=\"weatherforecast-temperature\">\n                  {Temperature()}\n                </div>\n              </div>\n            </div>\n          );\n        } else {\n          return null;\n        }\n      })}\n    </div>\n  </div>\n);}*/\n_c = ForecastHourly;\nvar _c;\n$RefreshReg$(_c, \"ForecastHourly\");","map":{"version":3,"names":["React","WeatherIcon","ForecastHourly","props","Temperature","temperature","Math","round","hourlydata","temp","console","log","dt","hour","date","Date","getHours","_c","$RefreshReg$"],"sources":["/Users/yolokazifumba/Desktop/shecodes/react-weather-app/src/ForecastHourly.js"],"sourcesContent":["import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\n\n\nexport default function ForecastHourly(props){\n    function Temperature() {\n      let temperature = Math.round(props.hourlydata.temp);\n      return `${temperature}`;\n    };\n\n    console.log(props.hourlydata[0].dt)\n\n    function hour() {\n      \n      let date = new Date(props.hourlydata.dt * 1000);\n      let hour = date.getHours();\n      console.log(`${hour}`);\n     \n    }\n\n    return \"loading\"}\n    /*<div className=\"weather-forecast\">\n        <div className=\"row\">\n          {props.hourlydata.map(function (hourlyforecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <div className=\"forecastHourly\">\n                    <div className=\"weatherforecast-hour\">\"hour\"</div>\n                    <WeatherIcon\n                      code={props.hourlydata.weather[0].icon}\n                      size={20}\n                    />{\" \"}\n                    <div className=\"weatherforecast-temperature\">\n                      {Temperature()}\n                    </div>\n                  </div>\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );}*/\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAGvC,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAC;EACzC,SAASC,WAAWA,CAAA,EAAG;IACrB,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACK,UAAU,CAACC,IAAI,CAAC;IACnD,OAAQ,GAAEJ,WAAY,EAAC;EACzB;EAAC;EAEDK,OAAO,CAACC,GAAG,CAACR,KAAK,CAACK,UAAU,CAAC,CAAC,CAAC,CAACI,EAAE,CAAC;EAEnC,SAASC,IAAIA,CAAA,EAAG;IAEd,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACZ,KAAK,CAACK,UAAU,CAACI,EAAE,GAAG,IAAI,CAAC;IAC/C,IAAIC,IAAI,GAAGC,IAAI,CAACE,QAAQ,CAAC,CAAC;IAC1BN,OAAO,CAACC,GAAG,CAAE,GAAEE,IAAK,EAAC,CAAC;EAExB;EAEA,OAAO,SAAS;AAAA;AAChB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBII,EAAA,GAjBoBf,cAAc;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
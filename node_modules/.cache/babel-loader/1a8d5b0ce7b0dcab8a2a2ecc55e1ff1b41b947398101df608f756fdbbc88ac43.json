{"ast":null,"code":"var _jsxFileName = \"/Users/yolokazifumba/Desktop/shecodes/react-weather-app/src/ForecastHourly.js\";\nimport React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastHourly(props) {\n  function Temperature() {\n    let temperature = Math.round(props.hourlydata.temp);\n    return `${temperature}`;\n  }\n  ;\n  function hour() {\n    let date = new Date(props.hourlydata.dt * 1000);\n    let hour = date.getHours();\n    console.log({\n      hour\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-forecast\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: props.hourlydata.map(function (hourlyforecast, index) {\n        if (index < 5) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"forecastHourly\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weatherforecast-hour\",\n                children: hour()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n                code: props.hourlydata.weather[0].icon,\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"weatherforecast-temperature\",\n                children: Temperature()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n_c = ForecastHourly;\nvar _c;\n$RefreshReg$(_c, \"ForecastHourly\");","map":{"version":3,"names":["React","WeatherIcon","jsxDEV","_jsxDEV","ForecastHourly","props","Temperature","temperature","Math","round","hourlydata","temp","hour","date","Date","dt","getHours","console","log","className","children","map","hourlyforecast","index","fileName","_jsxFileName","lineNumber","columnNumber","code","weather","icon","size","_c","$RefreshReg$"],"sources":["/Users/yolokazifumba/Desktop/shecodes/react-weather-app/src/ForecastHourly.js"],"sourcesContent":["import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\n\n\nexport default function ForecastHourly(props){\n    function Temperature() {\n      let temperature = Math.round(props.hourlydata.temp);\n      return `${temperature}`;\n    };\n\n    \n\n    function hour() {\n      \n      let date = new Date(props.hourlydata.dt * 1000);\n      let hour = date.getHours();\n      console.log({ hour });\n     \n    }\n\n    return (\n      <div className=\"weather-forecast\">\n        <div className=\"row\">\n          {props.hourlydata.map(function (hourlyforecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                  <div className=\"forecastHourly\">\n                    <div className=\"weatherforecast-hour\">{hour()}</div>\n                    <WeatherIcon\n                      code={props.hourlydata.weather[0].icon}\n                      size={20}\n                    />{\" \"}\n                    <div className=\"weatherforecast-temperature\">\n                      {Temperature()}\n                    </div>\n                  </div>\n                </div>\n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAC;EACzC,SAASC,WAAWA,CAAA,EAAG;IACrB,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACK,UAAU,CAACC,IAAI,CAAC;IACnD,OAAQ,GAAEJ,WAAY,EAAC;EACzB;EAAC;EAID,SAASK,IAAIA,CAAA,EAAG;IAEd,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACT,KAAK,CAACK,UAAU,CAACK,EAAE,GAAG,IAAI,CAAC;IAC/C,IAAIH,IAAI,GAAGC,IAAI,CAACG,QAAQ,CAAC,CAAC;IAC1BC,OAAO,CAACC,GAAG,CAAC;MAAEN;IAAK,CAAC,CAAC;EAEvB;EAEA,oBACET,OAAA;IAAKgB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC/BjB,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBf,KAAK,CAACK,UAAU,CAACW,GAAG,CAAC,UAAUC,cAAc,EAAEC,KAAK,EAAE;QACrD,IAAIA,KAAK,GAAG,CAAC,EAAE;UACb,oBACEpB,OAAA;YAAKgB,SAAS,EAAC,KAAK;YAAAC,QAAA,eAClBjB,OAAA;cAAKgB,SAAS,EAAC,gBAAgB;cAAAC,QAAA,gBAC7BjB,OAAA;gBAAKgB,SAAS,EAAC,sBAAsB;gBAAAC,QAAA,EAAER,IAAI,CAAC;cAAC;gBAAAY,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eACpDxB,OAAA,CAACF,WAAW;gBACV2B,IAAI,EAAEvB,KAAK,CAACK,UAAU,CAACmB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAK;gBACvCC,IAAI,EAAE;cAAG;gBAAAP,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,EAAC,GAAG,eACNxB,OAAA;gBAAKgB,SAAS,EAAC,6BAA6B;gBAAAC,QAAA,EACzCd,WAAW,CAAC;cAAC;gBAAAkB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC,GAVkBJ,KAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAW1B,CAAC;QAEV,CAAC,MAAM;UACL,OAAO,IAAI;QACb;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AACN;AAACK,EAAA,GAzCiB5B,cAAc;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
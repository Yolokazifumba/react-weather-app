{"ast":null,"code":"var _jsxFileName = \"/Users/yolokazifumba/Desktop/shecodes/react-weather-app/src/ForecastHourly.js\";\nimport React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForecastHourly(props) {\n  function Temperature() {\n    let temperature = Math.round(props.hourlydata.temp);\n    return `${temperature}`;\n  }\n  ;\n  console.log(props.hourlydata[0].dt * 1000);\n  function hour() {\n    let date = new Date(props.hourlydata.dt * 1000);\n    let hour = date.getHours();\n  }\n  console.log(our);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-forecast\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: props.hourlydata.map(function (hourlyforecast, index) {\n        if (index < 5) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weatherforecast-hour\",\n              children: hour()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n              code: props.hourlydata.weather[0].icon,\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weatherforecast-temperature\",\n              children: Temperature()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_c = ForecastHourly;\nvar _c;\n$RefreshReg$(_c, \"ForecastHourly\");","map":{"version":3,"names":["React","WeatherIcon","jsxDEV","_jsxDEV","ForecastHourly","props","Temperature","temperature","Math","round","hourlydata","temp","console","log","dt","hour","date","Date","getHours","our","className","children","map","hourlyforecast","index","fileName","_jsxFileName","lineNumber","columnNumber","code","weather","icon","size","_c","$RefreshReg$"],"sources":["/Users/yolokazifumba/Desktop/shecodes/react-weather-app/src/ForecastHourly.js"],"sourcesContent":["import React from \"react\";\nimport WeatherIcon from \"./WeatherIcon\";\n\n\nexport default function ForecastHourly(props){\n    function Temperature() {\n      let temperature = Math.round(props.hourlydata.temp);\n      return `${temperature}`;\n    };\n\n    console.log(props.hourlydata[0].dt*1000)\n\n    function hour() {\n      let date = new Date(props.hourlydata.dt * 1000);\n      let hour = date.getHours();\n    }\n\n     console.log(our);\n\n    return(\n    <div className=\"weather-forecast\">\n        <div className=\"row\">\n          {props.hourlydata.map(function (hourlyforecast, index) {\n            if (index < 5) {\n              return (\n                <div className=\"col\" key={index}>\n                 \n                    <div className=\"weatherforecast-hour\">{hour()}</div>\n                    <WeatherIcon\n                      code={props.hourlydata.weather[0].icon}\n                      size={20}\n                    />{\" \"}\n                    <div className=\"weatherforecast-temperature\">\n                      {Temperature()}\n                    </div>\n                  </div>\n                \n              );\n            } else {\n              return null;\n            }\n          })}\n        </div>\n      </div>\n    );}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGxC,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAC;EACzC,SAASC,WAAWA,CAAA,EAAG;IACrB,IAAIC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAACK,UAAU,CAACC,IAAI,CAAC;IACnD,OAAQ,GAAEJ,WAAY,EAAC;EACzB;EAAC;EAEDK,OAAO,CAACC,GAAG,CAACR,KAAK,CAACK,UAAU,CAAC,CAAC,CAAC,CAACI,EAAE,GAAC,IAAI,CAAC;EAExC,SAASC,IAAIA,CAAA,EAAG;IACd,IAAIC,IAAI,GAAG,IAAIC,IAAI,CAACZ,KAAK,CAACK,UAAU,CAACI,EAAE,GAAG,IAAI,CAAC;IAC/C,IAAIC,IAAI,GAAGC,IAAI,CAACE,QAAQ,CAAC,CAAC;EAC5B;EAECN,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;EAEjB,oBACAhB,OAAA;IAAKiB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,eAC7BlB,OAAA;MAAKiB,SAAS,EAAC,KAAK;MAAAC,QAAA,EACjBhB,KAAK,CAACK,UAAU,CAACY,GAAG,CAAC,UAAUC,cAAc,EAAEC,KAAK,EAAE;QACrD,IAAIA,KAAK,GAAG,CAAC,EAAE;UACb,oBACErB,OAAA;YAAKiB,SAAS,EAAC,KAAK;YAAAC,QAAA,gBAEhBlB,OAAA;cAAKiB,SAAS,EAAC,sBAAsB;cAAAC,QAAA,EAAEN,IAAI,CAAC;YAAC;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACpDzB,OAAA,CAACF,WAAW;cACV4B,IAAI,EAAExB,KAAK,CAACK,UAAU,CAACoB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAK;cACvCC,IAAI,EAAE;YAAG;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACV,CAAC,EAAC,GAAG,eACNzB,OAAA;cAAKiB,SAAS,EAAC,6BAA6B;cAAAC,QAAA,EACzCf,WAAW,CAAC;YAAC;cAAAmB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACX,CAAC;UAAA,GATgBJ,KAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUxB,CAAC;QAGZ,CAAC,MAAM;UACL,OAAO,IAAI;QACb;MACF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AACN;AAACK,EAAA,GAxCiB7B,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}